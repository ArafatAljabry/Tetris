#pragma once

class pieces
{
private:
    // Multidimentional array defining each piece and their corresponding rotation;
    // [7 pieces][4 rotations][5 lines][with 5 char]
    // 2 = rotation pivot block, 1 = block, 0 = no block
    char mPieces[7][4][5][5] = 
    {
        {
            //Square
            {
                {0,0,0,0,0},
                {0,0,0,0,0},
                {0,0,2,1,0},
                {0,0,1,1,0},
                {0,0,0,0,0} },
            {
                {0,0,0,0,0},
                {0,0,0,0,0},
                {0,0,2,1,0},
                {0,0,1,1,0},
                {0,0,0,0,0} },
            {
                {0,0,0,0,0},
                {0,0,0,0,0},
                {0,0,2,1,0},
                {0,0,1,1,0},
                {0,0,0,0,0} },
            {
                {0,0,0,0,0},
                {0,0,0,0,0},
                {0,0,2,1,0},
                {0,0,1,1,0},
                {0,0,0,0,0} }
        },
        {
            // I
                {
                    {0,0,0,0,0},
                    {0,0,0,0,0},
                    {0,1,2,1,1},
                    {0,0,0,0,0},
                    {0,0,0,0,0} },
                {
                    {0,0,0,0,0},
                    {0,0,1,0,0},
                    {0,0,2,0,0},
                    {0,0,1,0,0},
                    {0,0,1,0,0} },
                {
                    {0,0,0,0,0},
                    {0,0,0,0,0},
                    {1,1,2,1,0},
                    {0,0,0,0,0},
                    {0,0,0,0,0} },
                {
                    {0,0,1,0,0},
                    {0,0,1,0,0},
                    {0,0,2,0,0},
                    {0,0,1,0,0},
                    {0,0,0,0,0} }
        },
        {
            // L
                {
                    {0,0,0,0,0},
                    {0,0,1,0,0},
                    {0,0,2,0,0},
                    {0,0,1,1,0},
                    {0,0,0,0,0} },
                {
                    {0,0,0,0,0},
                    {0,0,0,0,0},
                    {0,1,2,1,0},
                    {0,1,0,0,0},
                    {0,0,0,0,0} },
                {
                    {0,0,0,0,0},
                    {0,1,1,0,0},
                    {0,0,2,0,0},
                    {0,0,1,0,0},
                    {0,0,0,0,0} },
                {
                    {0,0,0,0,0},
                    {0,0,0,1,0},
                    {0,1,2,1,0},
                    {0,0,0,0,0},
                    {0,0,0,0,0} }
        },
        {
            // L - Mirrored
                {
                    {0,0,0,0,0},
                    {0,0,1,0,0},
                    {0,0,2,0,0},
                    {0,1,1,0,0},
                    {0,0,0,0,0} },
                {
                    {0,0,0,0,0},
                    {0,1,0,0,0},
                    {0,1,2,1,0},
                    {0,0,0,0,0},
                    {0,0,0,0,0} },
                {
                    {0,0,0,0,0},
                    {0,0,1,1,0},
                    {0,0,2,0,0},
                    {0,0,1,0,0},
                    {0,0,0,0,0} },
                {
                    {0,0,0,0,0},
                    {0,0,0,0,0},
                    {0,1,2,1,0},
                    {0,0,0,1,0},
                    {0,0,0,0,0} }
},
        {
            // N
                {
                    {0,0,0,0,0},
                    {0,0,0,1,0},
                    {0,0,2,1,0},
                    {0,0,1,0,0},
                    {0,0,0,0,0} },
                {
                    {0,0,0,0,0},
                    {0,0,0,0,0},
                    {0,1,2,0,0},
                    {0,0,1,1,0},
                    {0,0,0,0,0} },
                {
                    {0,0,0,0,0},
                    {0,0,1,0,0},
                    {0,0,2,0,0},
                    {0,1,0,0,0},
                    {0,1,0,0,0} },
                {
                    {0,0,0,0,0},
                    {0,1,1,0,0},
                    {0,0,2,1,0},
                    {0,0,0,0,0},
                    {0,0,0,0,0} }
        },
        {
            //N - Mirrored
                {
                    {0,0,0,0,0},
                    {0,0,1,0,0},
                    {0,0,2,1,0},
                    {0,0,0,1,0},
                    {0,0,0,0,0} },
                {
                    {0,0,0,0,0},
                    {0,0,0,0,0},
                    {0,0,2,1,0},
                    {0,1,1,0,0},
                    {0,0,0,0,0} },
                {
                    {0,0,0,0,0},
                    {0,1,0,0,0},
                    {0,1,2,0,0},
                    {0,0,1,0,0},
                    {0,0,0,0,0} },
                {
                    {0,0,0,0,0},
                    {0,0,1,1,0},
                    {0,1,2,0,0},
                    {0,0,0,0,0},
                    {0,0,0,0,0} }
        },
        {
            // T
                {
                    {0,0,0,0,0},
                    {0,0,1,0,0},
                    {0,0,2,1,0},
                    {0,0,1,0,0},
                    {0,0,0,0,0} },
                {
                    {0,0,0,0,0},
                    {0,0,0,0,0},
                    {0,1,2,1,0},
                    {0,0,1,0,0},
                    {0,0,0,0,0} },
                {
                    {0,0,0,0,0},
                    {0,0,1,0,0},
                    {0,1,2,0,0},
                    {0,0,1,0,0},
                    {0,0,0,0,0} },
                {
                    {0,0,0,0,0},
                    {0,0,1,0,0},
                    {0,1,2,1,0},
                    {0,0,0,0,0},
                    {0,0,0,0,0} }
        }
    };
    

    // Displacements for each rotation of a piece so that it is placed properly on spawn {x,y}
   // [kind][rotation][position]
    int mPiecesInitialPos[7][4][2] =
        {
        // Square
        {
            {-2,-3},
            {-2,-3},
            {-2,-3},
            {-2,-3}
        },
        // I
        {
            {-2,-2},
            {-2,-3},
            {-2,-2},
            {-2,-2}
        },
        // L
        {
            {-2,-3},
            {-2,-3},
            {-2,-3},
            {-2,-2}
        },
        // L - Mirrored
        {
            {-2,-3},
            {-2,-2},
            {-2,-3},
            {-2,-3}
        },
        // N
        {
            {-2,-3},
            {-2,-3},
            {-2,-3},
            {-2,-2}
        },
        //  N - Mirrored
        {
            {-2,-3},
            {-2,-3},
            {-2,-3},
            {-2,-2}
        },
         // T
        {
            {-2,-3},
            {-2,-3},
            {-2,-3},
            {-2,-2}
        }
        };
public:

    int GetBlockType(int piece, int rotation, int x, int y);
    int GetXInitialPos(int piece, int rotation);
    int GetYInitialPos(int piece, int rotation);
};
